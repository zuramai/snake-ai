var R=Object.defineProperty;var A=(l,t,s)=>t in l?R(l,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):l[t]=s;var o=(l,t,s)=>(A(l,typeof t!="symbol"?t+"":t,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const h of e)if(h.type==="childList")for(const n of h.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const h={};return e.integrity&&(h.integrity=e.integrity),e.referrerPolicy&&(h.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?h.credentials="include":e.crossOrigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function i(e){if(e.ep)return;e.ep=!0;const h=s(e);fetch(e.href,h)}})();const m=(l,t)=>Math.random()*(t-l)+l,T=(l,t)=>{l=l||0,t=t||1;var s=Math.random(),i=Math.random(),e=Math.sqrt(-2*Math.log(s))*Math.cos(2*Math.PI*i);return e*t+l};class f{constructor(t,s,i){o(this,"rows");o(this,"cols");o(this,"matrix");this.rows=t,this.cols=s,this.matrix=i||new Array(t).fill(void 0).map(()=>new Array(s))}static fromGrid(t){return new f(t.length,t[0].length,t)}output(){this.matrix.forEach(t=>{t.forEach(s=>{console.log(s+" ")}),console.log(`
`)}),console.log(`
`)}dot(t){const s=new f(this.rows,t.cols);if(this.cols===t.rows)for(let i=0;i<this.rows;i++)for(let e=0;e<t.cols;e++){let h=0;for(let n=0;n<this.cols;n++)h+=this.matrix[i][n]*t.matrix[n][e];s.matrix[i][e]=h}return s}randomize(){for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.matrix[t][s]=Math.random()*2-1}static singleColumnMatrixFromArray(t){const s=new f(t.length,1);return s.matrix=[],t.forEach(i=>{s.matrix.push([i])}),s}toArray(){let t=[];for(let s=0;s<this.rows;s++)for(let i=0;i<this.cols;i++)t.push(this.matrix[s][i]);return t}addBias(){const t=new f(this.rows+1,1,[]);for(let s=0;s<this.rows;s++)t.matrix.push([this.matrix[s][0]]);return t.matrix.push([1]),t}activate(){const t=new f(this.rows,this.cols);for(let s=0;s<this.rows;s++)for(let i=0;i<this.rows;i++)t.matrix[s][i]=this.relu(this.matrix[s][i]);return t}relu(t){return t<=0?0:t}clone(){const t=new f(this.rows,this.cols);for(let s=0;s<this.rows;s++)for(let i=0;i<this.cols;i++)t.matrix[s][i]=this.matrix[s][i];return t}mutate(t){for(let s=0;s<this.rows;s++)for(let i=0;i<this.cols;i++)m(0,1)<t&&(this.matrix[s][i]+=T(0,1)/5,this.matrix[s][i]>1&&(this.matrix[s][i]=1),this.matrix[s][i]<-1&&(this.matrix[s][i]=-1))}crossover(t){const s=new f(this.rows,this.cols),i=Math.floor(m(0,this.cols)),e=Math.floor(m(0,this.rows));for(let h=0;h<this.rows;h++)for(let n=0;n<this.cols;n++)h<e||h==e&&n<=i?s.matrix[h][n]=this.matrix[h][n]:s.matrix[h][n]=t.matrix[h][n];return s}}class S{constructor(t,s,i,e){o(this,"iNodes");o(this,"hNodes");o(this,"oNodes");o(this,"hLayers");o(this,"weights",[]);this.iNodes=t,this.hNodes=s,this.oNodes=i,this.hLayers=e,this.weights=new Array(e+1),this.weights[0]=new f(this.hNodes,this.iNodes+1);for(let h=1;h<this.hLayers;h++)this.weights[h]=new f(this.hNodes,this.hNodes+1);this.weights[this.weights.length-1]=new f(this.oNodes,this.hNodes+1);for(let h=0;h<this.weights.length;h++)this.weights[h].randomize()}mutate(t){for(let s=0;s<this.weights.length;s++)this.weights[s].mutate(t)}output(t){let i=f.singleColumnMatrixFromArray(t).addBias();for(let n=0;n<this.hLayers;n++)i=this.weights[n].dot(i).activate().addBias();return this.weights[this.weights.length-1].dot(i).activate().toArray()}draw(t,s,i){const n=[[]],u=[[]];for(let r=0;r<this.iNodes;r++){const d=15*r+25*r+50;t.beginPath(),t.arc(15,d,15,0,Math.PI*2),t.fillStyle=i[r]>0?"#25fa77":"white",t.strokeStyle=i[r]!=0?"black":"white",t.stroke(),t.fill(),t.closePath(),n[0].push(15),u[0].push(d)}const w=150;for(let r=0;r<this.hLayers;r++){const c=[],d=[];for(let p=0;p<this.hNodes;p++){const y=w*(r+1),P=15*p+25*p+250;c.push(y),d.push(P),t.beginPath(),t.arc(y,P,15,0,Math.PI*2),t.fillStyle="white",t.strokeStyle="black",t.stroke(),t.fill(),t.closePath()}n.push(c),u.push(d)}let g=0,z=0;s.forEach((r,c)=>{r>g&&(z=c,g=r)});const L=[],N=[],D=["Up","Down","Left","Right"];for(let r=0;r<this.oNodes;r++){const c=w*(this.hLayers+1)-15,d=15*r+25*r+450+15;t.beginPath(),t.arc(c,d,15,0,Math.PI*2),t.font="16px Arial",t.fillStyle=z===r?"#25fa77":"white",t.fillText(D[r],c+15,d),t.strokeStyle="black",t.stroke(),t.fill(),t.closePath(),L.push(c),N.push(d)}n.push(L),u.push(N);for(let r=0;r<n.length-1;r++){const c={x:n[r],y:u[r]},d={x:n[r+1],y:u[r+1]};for(let p=0;p<c.x.length;p++)for(let y=0;y<d.x.length;y++)t.beginPath(),t.strokeStyle=y%2===1?"#fc6084":"#6068fc",t.lineWidth=.8,t.moveTo(c.x[p]+15,c.y[p]),t.lineTo(d.x[y]-15,d.y[y]),t.stroke(),t.closePath()}}crossover(t){const s=new S(this.iNodes,this.hNodes,this.oNodes,this.hLayers);for(let i=0;i<this.weights.length;i++)s.weights[i]=this.weights[i].crossover(t.weights[i]);return s}clone(){const t=new S(this.iNodes,this.hNodes,this.oNodes,this.hLayers);for(let s=0;s<this.weights.length;s++)t.weights[s]=this.weights[s].clone();return t}load(t){for(let s=0;s<this.weights.length;s++)this.weights[s]=t[s]}pull(){return this.weights}}class a{constructor(t,s){o(this,"x");o(this,"y");this.x=t,this.y=s}add(t,s){this.x+=t,this.y+=s}addVector(t){this.x+=t.x,this.y+=t.y}clone(){return new a(this.x,this.y)}}class v{constructor(t,s){o(this,"pos");o(this,"size");o(this,"options");const i=t*Math.floor(m(0,24)),e=t*Math.floor(m(0,24));this.size=t,this.pos=new a(i,e),this.options=s||{color:"blue"}}draw(t){t.fillStyle=this.options.color,t.fillRect(this.pos.x,this.pos.y,this.size,this.size)}clone(){const t=new v(this.size,this.options);return t.pos.x=this.pos.x,t.pos.y=this.pos.y,t}}const j={nn:{hiddenNodes:16},canvas:{width:800,height:800},snake:{color:"purple",seeVision:!1},size:20};class k{constructor(t,s=j){o(this,"score",0);o(this,"life",200);o(this,"lifetime",0);o(this,"xVel",0);o(this,"yVel",0);o(this,"foodIterate",0);o(this,"dead",!1);o(this,"replay",!1);o(this,"fitness",0);o(this,"vision");o(this,"decision");o(this,"head");o(this,"body");o(this,"foodList");o(this,"food");o(this,"brain");o(this,"options");this.head=new a(420,420),this.food=new v(s.size,{color:"#ffea5e"}),this.body=[],this.vision=new Array(24),this.decision=new Array(4),this.foodList=[this.food.clone()],this.brain=new S(24,s.nn.hiddenNodes,4,t),this.body.push(new a(420,420+s.size)),this.body.push(new a(420,420+s.size*2)),this.options=s}bodyCollide(t,s){for(let i=0;i<this.body.length;i++)if(t==this.body[i].x&&s==this.body[i].y)return!0;return!1}foodCollide(t,s){return this.food===void 0&&console.log("UNDEFINED FOOD"),t===this.food.pos.x&&s==this.food.pos.y}wallCollide(t,s){return t>=this.options.canvas.width||t<0||s>=this.options.canvas.height||s<0}draw(t){this.food.draw(t),t.strokeStyle="white",t.fillStyle=this.options.snake.color,t.beginPath(),t.rect(this.head.x,this.head.y,this.options.size,this.options.size),t.fill(),t.stroke(),t.closePath(),this.body.forEach(s=>{t.beginPath(),t.rect(s.x,s.y,this.options.size,this.options.size),t.lineWidth=1,t.fill(),t.stroke(),t.closePath()})}move(){this.dead||(this.lifetime++,this.life--),this.foodCollide(this.head.x,this.head.y)&&this.eat(),this.shiftBody(),this.bodyCollide(this.head.x,this.head.y)&&(this.dead=!0,this.replay&&console.log("dead body collide")),(this.wallCollide(this.head.x,this.head.y)||this.life<=0)&&(this.dead=!0,this.replay&&console.log("dead wall collide"))}eat(){let t=this.body.length-1;if(this.score++,this.life<500&&(this.life>400?this.life=500:this.life+=100),t>=0?this.body.push(new a(this.body[t-1].x,this.body[t-1].y)):this.body.push(new a(this.head.x,this.head.y)),this.replay)this.food=this.foodList[this.foodIterate],this.foodIterate++;else{for(this.food=new v(this.options.size,this.food.options);this.bodyCollide(this.food.pos.x,this.food.pos.y);)this.food=new v(this.options.size,this.food.options);this.foodList.push(this.food)}}shiftBody(){let t=this.head.x,s=this.head.y;this.head.x+=this.xVel,this.head.y+=this.yVel;let i,e;this.body.forEach((h,n)=>{i=h.x,e=h.y,this.body[n].x=t,this.body[n].y=s,t=i,s=e})}crossover(t){const s=new k(hiddenLayers,this.options);return s.brain=this.brain.crossover(t.brain),s}mutate(){this.brain.mutate(mutationRate)}calculateFitness(){this.score<10?this.fitness=Math.floor(this.lifetime*this.lifetime)*Math.pow(2,this.score):(this.fitness=Math.floor(this.lifetime*this.lifetime),this.fitness*=Math.pow(2,10),this.fitness*=this.score-9)}look(t){const s=this.options.size;this.vision=new Array(24);let i=this.lookInDirection(new a(-s,0),t);this.vision[0]=i[0],this.vision[1]=i[1],this.vision[2]=i[2],i=this.lookInDirection(new a(-s,-s),t),this.vision[3]=i[0],this.vision[4]=i[1],this.vision[5]=i[2],i=this.lookInDirection(new a(0,-s),t),this.vision[6]=i[0],this.vision[7]=i[1],this.vision[8]=i[2],i=this.lookInDirection(new a(s,-s),t),this.vision[9]=i[0],this.vision[10]=i[1],this.vision[11]=i[2],i=this.lookInDirection(new a(s,0),t),this.vision[12]=i[0],this.vision[13]=i[1],this.vision[14]=i[2],i=this.lookInDirection(new a(s,s),t),this.vision[15]=i[0],this.vision[16]=i[1],this.vision[17]=i[2],i=this.lookInDirection(new a(0,s),t),this.vision[18]=i[0],this.vision[19]=i[1],this.vision[20]=i[2],i=this.lookInDirection(new a(-s,s),t),this.vision[21]=i[0],this.vision[22]=i[1],this.vision[23]=i[2]}lookInDirection(t,s){const i=[0,0,0],e=new a(this.head.x,this.head.y);let h=0,n=!1,u=!1;e.addVector(t),h++;const w=[];for(;!this.wallCollide(e.x,e.y);)w.push([e.x,e.y]),!n&&this.foodCollide(e.x,e.y)&&(n=!0,i[0]=1,s.fill()),!u&&this.bodyCollide(e.x,e.y)&&(u=!0,i[1]=1),e.addVector(t),h++;return this.replay&&(n?s.fillStyle="gold":s.fillStyle="gray",w.forEach(g=>{s.beginPath(),s.arc(g[0]+this.options.size/2,g[1]+this.options.size/2,3,0,Math.PI*2),s.closePath(),s.fill()})),i[2]=1/h,i}think(){this.decision=this.brain.output(this.vision);let t=0,s=0;for(let i=0;i<this.decision.length;i++)this.decision[i]>s&&(s=this.decision[i],t=i);switch(t){case 0:this.moveUp();break;case 1:this.moveDown();break;case 2:this.moveLeft();break;case 3:this.moveRight();break}}moveUp(){this.yVel!=this.options.size&&(this.xVel=0,this.yVel=-this.options.size)}moveDown(){this.yVel!=-this.options.size&&(this.xVel=0,this.yVel=this.options.size)}moveLeft(){this.xVel!=this.options.size&&(this.xVel=-this.options.size,this.yVel=0)}moveRight(){this.xVel!=-this.options.size&&(this.xVel=this.options.size,this.yVel=0)}clone(){const t=new k(globalThis.hiddenLayers,this.options);return t.brain=this.brain.clone(),t}cloneForReplay(){const t=new k(globalThis.hiddenLayers,this.options);return t.brain=this.brain.clone(),t.foodList=[],t.replay=!0,this.foodList.forEach(s=>{t.foodList.push(s.clone())}),t}}const I=(l,t)=>{const s=document.createElement(l);return Object.keys(t).forEach(i=>{s.setAttribute(i,t[i])}),s};let x;const b=30,B=16,G=2;globalThis.hiddenLayers=G;const C=[],O=30;let Y=1e3/O,V=performance.now(),F,E=performance.now();class W{constructor(t,s){o(this,"snakes",[]);o(this,"bestSnake");o(this,"canvas");o(this,"graphCanvas");o(this,"ctx");o(this,"ctxG");o(this,"fitnessSum",0);o(this,"bestSnakeScore",0);o(this,"bestFitness",0);o(this,"samebest",0);o(this,"gen",0);this.graphCanvas=I("canvas",{width:"720",height:"1000"}),this.canvas=I("canvas",{width:"720",height:"720"}),s.append(this.graphCanvas,this.canvas);for(let i=0;i<t;i++)this.snakes.push(new k(G,{size:b,canvas:this.canvas,nn:{hiddenNodes:B},snake:{color:"#8183fc",seeVision:!1}}));this.bestSnake=this.snakes[0],console.log(this.snakes),this.bestSnake.replay=!0,this.ctx=this.canvas.getContext("2d"),x=this.ctx,this.ctxG=this.graphCanvas.getContext("2d")}isDone(){return!!(this.snakes.every(s=>s.dead===!0)||this.bestSnake.dead)}update(){this.bestSnake.dead||(this.bestSnake.look(x),this.bestSnake.think(),this.bestSnake.move()),this.snakes.forEach(t=>{t.dead||(t.look(x),t.think(),t.move())})}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.strokeStyle="white",this.ctx.lineWidth=5,this.ctx.strokeRect(0,0,this.canvas.width,this.canvas.height),this.ctx.strokeStyle="rgba(200,200,200,.2)",this.ctx.lineWidth=1;for(let t=0;t<this.canvas.width;t+=b)for(let s=0;s<this.canvas.height;s+=b)this.ctx.strokeRect(t,s,b,b);this.bestSnake.draw(this.ctx),this.bestSnake.brain.draw(this.ctxG,this.bestSnake.decision,this.bestSnake.vision)}render(){V=performance.now(),F=V-E,F>Y&&(this.drawGraph(),this.isDone()?(this.calculateFitness(),this.naturalSelection()):(this.draw(),this.update()),E=performance.now()),requestAnimationFrame(()=>this.render())}drawGraph(){this.ctxG.clearRect(0,0,this.graphCanvas.width,this.graphCanvas.height),this.ctxG.textBaseline="top",this.ctxG.fillStyle="white",this.ctxG.font="32px Arial",this.ctxG.fillText("Gen: "+this.gen,200,0),this.ctxG.fillText("Mutation Rate: "+globalThis.mutationRate+"%",400,100),this.ctxG.fillText("Score: "+this.bestSnake.score,400,50),this.ctxG.fillText("Lives: "+this.bestSnake.life,400,200),this.ctxG.fillText("High Score: "+this.bestSnakeScore,400,0)}selectParent(){let t=m(0,this.fitnessSum),s=0;for(let i=0;i<this.snakes.length;i++)if(s+=this.snakes[i].fitness,s>t)return this.snakes[i];return this.snakes[0]}mutate(){this.snakes.forEach(t=>t.mutate())}calculateFitness(){this.snakes.forEach(t=>t.calculateFitness())}calculateFitnessSum(){this.fitnessSum=0,this.snakes.forEach(t=>this.fitnessSum+=t.fitness)}naturalSelection(){const t=[];this.setBestSnake(),this.calculateFitnessSum(),t[0]=this.bestSnake.clone(),console.log(this.fitnessSum);for(let s=1;s<this.snakes.length;s++){const i=this.selectParent().crossover(this.selectParent());i.mutate(),t[s]=i}this.snakes=t,C.push(this.bestSnakeScore),console.log(C),this.gen++}setBestSnake(){console.log("set best snake");let t=0,s=0;this.snakes.forEach((i,e)=>{i.fitness>t&&(console.log("best fitness",i.fitness),t=i.fitness,s=e)}),t>this.bestFitness?(this.bestFitness=t,this.bestSnake=this.snakes[s].cloneForReplay(),this.bestSnakeScore=this.snakes[s].score):(this.bestSnake=this.bestSnake.cloneForReplay(),this.samebest++,this.samebest>2&&(mutationRate*=2,this.samebest=0))}}globalThis.mutationRate=.05;let M;const q=document.querySelector(".canvas-wrapper"),U=()=>{M=new W(1e3,q),M.render()};U();
